import java.io.IOException;
import java.nio.file.*;
import java.util.Scanner;

public class Task4 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("–í–≤–µ–¥—ñ—Ç—å —à–ª—è—Ö –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É-–¥–∂–µ—Ä–µ–ª–∞: ");
        Path sourceDir = Paths.get(scanner.nextLine());

        System.out.print("–í–≤–µ–¥—ñ—Ç—å —à–ª—è—Ö –¥–æ –∫–∞—Ç–∞–ª–æ–≥—É-–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è: ");
        Path targetDir = Paths.get(scanner.nextLine());

        if (!Files.exists(sourceDir) || !Files.isDirectory(sourceDir)) {
            System.out.println("–ö–∞—Ç–∞–ª–æ–≥-–¥–∂–µ—Ä–µ–ª–æ –Ω–µ —ñ—Å–Ω—É—î –∞–±–æ –Ω–µ —î –∫–∞—Ç–∞–ª–æ–≥–æ–º.");
            return;
        }

        try {
            if (!Files.exists(targetDir)) {
                Files.createDirectories(targetDir);
                System.out.println("–ö–∞—Ç–∞–ª–æ–≥-–ø—Ä–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–æ.");
            }

            try (DirectoryStream<Path> stream = Files.newDirectoryStream(sourceDir)) {
                for (Path file : stream) {
                    if (Files.isRegularFile(file)) {
                        Path targetFile = targetDir.resolve(file.getFileName());
                        Files.copy(file, targetFile, StandardCopyOption.REPLACE_EXISTING);
                        System.out.println("üìÑ –°–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ: " + file.getFileName());
                    }
                }
            }

            System.out.println("–£—Å—ñ —Ñ–∞–π–ª–∏ —Å–∫–æ–ø—ñ–π–æ–≤–∞–Ω–æ —É—Å–ø—ñ—à–Ω–æ.");
        } catch (IOException e) {
            System.out.println("–ü–æ–º–∏–ª–∫–∞ –∫–æ–ø—ñ—é–≤–∞–Ω–Ω—è: " + e.getMessage());
        }
    }
}
